name: Build, Test, and Release Skryper

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Fix Python Environment on macOS
        if: matrix.os == 'macos-latest'
        run: |
          python -m ensurepip --default-pip
          python -m pip install --upgrade pip setuptools wheel

      - name: Install test dependencies
        run: |
          python -m pip install pytest pyinstaller

      - name: Run Tests
        shell: bash
        run: |
          echo "Running tests..."
          PYTHONPATH=src pytest src/tests/

  build:
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Fix Python Environment on macOS
        if: matrix.os == 'macos-latest'
        run: |
          python -m ensurepip --default-pip
          python -m pip install --upgrade pip setuptools wheel

      - name: Install PyInstaller
        run: python -m pip install pyinstaller

      - name: Build for Windows
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          $currentDate = Get-Date -Format "yyyy-MM-dd_HH-mm-ss"
          pyinstaller --name "skryper_$($currentDate)" --onefile src/app/main.py

      - name: Build for macOS
        if: matrix.os == 'macos-latest'
        shell: bash
        run: |
          currentDate=$(date +"%Y-%m-%d_%H-%M-%S")
          pyinstaller --name "skryper_macOS_$currentDate" --onefile src/app/main.py

      - name: Upload Windows Artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: skryper-exe
          path: dist/skryper_*.exe

      - name: Upload macOS Artifact
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: skryper-mac
          path: dist/skryper_macOS_*

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: skryper-exe
          path: .

      - name: Download macOS Artifact
        uses: actions/download-artifact@v4
        with:
          name: skryper-mac
          path: .

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            skryper_*.exe
            skryper_macOS_*
          tag_name: "v${{ github.run_id }}-${{ github.run_number }}"
          name: "Release ${{ github.run_id }}-${{ github.run_number }}"
          body: "Automated release of Skryper version ${{ github.run_id }}-${{ github.run_number }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
